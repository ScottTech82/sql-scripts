Chapter 3

INCREMENT Operator
        int n = 0;
        n = n + 1; //n is 1
        n++; //n is 2, adding to itself
        n++; //n is 3

        n--; //n is 2
        ++n; // n is 3

        int a = 0;
        int b = a++; // b is 0, but then a is incremented a is 1 now, so b is 1.
        int c = ++a; //a is incremented to 2 first, now C is 2.
    
    The side the increment operator is on changes which is done first.

        one sign is either postive or negative
        int a = 1;  int b = +a // b = 1 
        int c = -a; // c = -1
        The minus sign flips from postive to negative or vice versa.

LOGICAL OPERATORS 

        & - Ampersand is logical AND operator.
        | is the logical OR operator.
        ! is the logical NOT operator.
        ^ is the logical XOR operator that is not used much.
            XOR statement flips the booleon designation for one.
                A| B| A^B|
                T| T|  F | b is flipped to F, so the whole statement is False.
                T| F|  T |
                F| T|  T |
                F| F|  F |
   
    Double && or Double || will evaluate the first one and if false will not review the rest
        it will always be false.

Double == is comparison operator.

int a = 0;
int b = 1;

var answer (a == 1) && (++b == 1)
    this will end at the first false.  So b will not be incremented to 2.
    the order does make a difference in this case.

CONTROL FLOW
    Selection Statements
        if() {
            something
        } else if {
            something else
        } else
    Already familiar with these from prior coding experience.  Did not take many notes.

SWITCH Statements

    switch(variable) {
        case <what the variable equals>:
            Console.WriteLine();
            break;
        case <another>:
            Console.WriteLine();
            break;
        default:
            Console.WriteLine();
            break;
    }

    switch statement is much faster, it jumps right to the answer instead of checking every single line
    Easier to code out a list of items than using if else statement.
    
    SWITCH Expression simplifies even further
        salesperson = stateCode switch
        {
             "OH" => "Karl",
             "KY" => "Sam",
             "IN" => "Ian",
              _ => "Greg"  //default by using underscore
        };

ITERATION Statements

    while loop that will add up all the numbers from 1 to 100.
        int i = 100;
        int sum = 0;

        while(i > 0)
    {
        sum += i;
        i--;
    }
    Console.WriteLine($"Sum of numbers 1 to 100 is {sum}");
    